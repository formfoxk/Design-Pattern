package singleton_pattern_having_n_number_of_objects;

import java.util.ArrayList;

public class Singleton {
	private volatile static Singleton[] uniqueInstanceList;
	private int size;
	int n;
	
	private Singleton() {
		uniqueInstanceList = new ArrayList<Singleton>(10);
		for(int i = 0; i < 10; i++)
			uniqueInstanceList.add(null);
		
		n = 100;
	}

	public static Singleton getInstance() {
		
		for(int i = 0; i < 10; i++){
			if (uniqueInstanceList.get(i) == null) {
				synchronized (Singleton.class) { // 맨 처음 한 번만 실행(동기화)
					if (uniqueInstanceList.get(i) == null) {
						uniqueInstanceList.add(i, new Singleton());
						
						return uniqueInstanceList.get(i);
					}
				}
			}
		}
		return null;
	}
	
	int getN(){return n;}
}